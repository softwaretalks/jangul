swagger: "2.0"
info:
  description: "Jangul API Contract"
  version: "1.0.0"
  title: "Jangul"
  contact:
    email: "soroosh.sarabadani@gmail.com"

host: "jangul.io"
basePath: "/"
schemes:
  - "https"

paths:
  /users:
    post:
      summary: "Registers a new user"
      parameters:
        - in: "body"
          name: "user"
          required: true
          schema:
            $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: User registered successfully
          schema:
            $ref: "#/definitions/UserResponse"
  /tokens:
    post:
      summary: |
       Requests a new auth token, The auth token should be sent through Authorization header with the following format:
         Authorization: Bearer GENERATED_TOKEN
      parameters:
        - in: "body" 
          name: "request"
          required: true
          schema:
            $ref: "#/definitions/TokenRequest"
      responses:
        200:
          description: Token has been generated
          schema:
            $ref: "#/definitions/TokenResponse"
    
          
  /endpoints:
    post:
      summary: "Adds a new endpoint to check its health in known intervals"
      description: ""
      operationId: "addEndpoint"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Endpoints object"
          required: true
          schema:
            $ref: "#/definitions/Endpoint"
      responses:
        200:
          description: "Endpoint added successfully"
        405:
          description: "Invalid input"


    get:
      summary: "All the registered endpoints"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Endpoint"



definitions:
  UserRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
  UserResponse:
    type: object
    properties:
      email:
        type: string
    
  TokenRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  TokenResponse:
    type: object
    properties:
      token:
        type: string
  Endpoint:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      address:
        type: "string"
      protocol:
        type: "string"
        enum:
          - HTTP
